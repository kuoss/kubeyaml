apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: aspnet-core
    helm.sh/chart: aspnet-core-3.1.0
  name: RELEASE-NAME-aspnet-core
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: RELEASE-NAME
      app.kubernetes.io/name: aspnet-core
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: aspnet-core
        helm.sh/chart: aspnet-core-3.1.0
    spec:
      affinity:
        nodeAffinity: null
        podAffinity: null
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/instance: RELEASE-NAME
                  app.kubernetes.io/name: aspnet-core
              namespaces:
              - default
              topologyKey: kubernetes.io/hostname
            weight: 1
      automountServiceAccountToken: true
      containers:
      - command:
        - dotnet
        - KestrelSample.dll
        env:
        - name: ASPNETCORE_URLS
          value: http://+:8080
        image: docker.io/bitnami/aspnet-core:6.0.1-debian-10-r30
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 6
          initialDelaySeconds: 10
          periodSeconds: 20
          successThreshold: 1
          tcpSocket:
            port: http
          timeoutSeconds: 1
        name: aspnet-core
        ports:
        - containerPort: 8080
          name: http
        readinessProbe:
          failureThreshold: 6
          initialDelaySeconds: 10
          periodSeconds: 20
          successThreshold: 1
          tcpSocket:
            port: http
          timeoutSeconds: 1
        resources:
          limits: {}
          requests: {}
        volumeMounts:
        - mountPath: /app
          name: app
        workingDir: /app
      initContainers:
      - command:
        - /bin/bash
        - -ec
        - |
          [[ -f "/opt/bitnami/scripts/git/entrypoint.sh" ]] && source "/opt/bitnami/scripts/git/entrypoint.sh"
          git clone https://github.com/dotnet/AspNetCore.Docs.git --branch main /repo
        image: docker.io/bitnami/git:2.34.1-debian-10-r46
        imagePullPolicy: IfNotPresent
        name: clone-repository
        volumeMounts:
        - mountPath: /repo
          name: repo
      - command:
        - /bin/bash
        - -ec
        - "cd aspnetcore/fundamentals/servers/kestrel/samples/6.x/KestrelSample\ndotnet
          publish -o /app \n"
        image: docker.io/bitnami/dotnet-sdk:6.0.101-debian-10-r29
        imagePullPolicy: IfNotPresent
        name: dotnet-publish
        volumeMounts:
        - mountPath: /app
          name: app
        - mountPath: /repo
          name: repo
        workingDir: /repo
      serviceAccountName: RELEASE-NAME-aspnet-core
      volumes:
      - emptyDir: {}
        name: app
      - emptyDir: {}
        name: repo
