apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: odoo
    helm.sh/chart: odoo-20.2.4
  name: RELEASE-NAME-odoo
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: RELEASE-NAME
      app.kubernetes.io/name: odoo
  strategy:
    rollingUpdate: {}
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: odoo
        helm.sh/chart: odoo-20.2.4
    spec:
      affinity:
        nodeAffinity: null
        podAffinity: null
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/instance: RELEASE-NAME
                  app.kubernetes.io/name: odoo
              namespaces:
              - default
              topologyKey: kubernetes.io/hostname
            weight: 1
      containers:
      - env:
        - name: BITNAMI_DEBUG
          value: "false"
        - name: ALLOW_EMPTY_PASSWORD
          value: "no"
        - name: ODOO_DATABASE_HOST
          value: RELEASE-NAME-postgresql
        - name: ODOO_DATABASE_PORT_NUMBER
          value: "5432"
        - name: ODOO_DATABASE_NAME
          value: bitnami_odoo
        - name: ODOO_DATABASE_USER
          value: bn_odoo
        - name: ODOO_DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              key: postgresql-password
              name: RELEASE-NAME-postgresql
        - name: ODOO_EMAIL
          value: user@example.com
        - name: ODOO_PASSWORD
          valueFrom:
            secretKeyRef:
              key: odoo-password
              name: RELEASE-NAME-odoo
        - name: ODOO_SKIP_BOOTSTRAP
          value: null
        - name: ODOO_LOAD_DEMO_DATA
          value: "no"
        envFrom: null
        image: docker.io/bitnami/odoo:15.0.20220110-debian-10-r1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 6
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 600
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: RELEASE-NAME-odoo
        ports:
        - containerPort: 8069
          name: http
        readinessProbe:
          failureThreshold: 6
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          limits: {}
          requests:
            cpu: 300m
            memory: 512Mi
        volumeMounts:
        - mountPath: /bitnami/odoo
          name: odoo-data
      serviceAccountName: RELEASE-NAME-odoo
      volumes:
      - name: odoo-data
        persistentVolumeClaim:
          claimName: RELEASE-NAME-odoo
