apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: influxdb
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: influxdb
    helm.sh/chart: influxdb-3.0.2
  name: RELEASE-NAME-influxdb
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: influxdb
      app.kubernetes.io/instance: RELEASE-NAME
      app.kubernetes.io/name: influxdb
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/component: influxdb
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: influxdb
        helm.sh/chart: influxdb-3.0.2
    spec:
      affinity:
        nodeAffinity: null
        podAffinity: null
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/component: influxdb
                  app.kubernetes.io/instance: RELEASE-NAME
                  app.kubernetes.io/name: influxdb
              namespaces:
              - default
              topologyKey: kubernetes.io/hostname
            weight: 1
      containers:
      - env:
        - name: BITNAMI_DEBUG
          value: "false"
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: INFLUXDB_HTTP_AUTH_ENABLED
          value: "true"
        - name: INFLUXDB_CREATE_USER_TOKEN
          value: "no"
        - name: INFLUXDB_ADMIN_USER
          value: admin
        - name: INFLUXDB_ADMIN_USER_PASSWORD
          valueFrom:
            secretKeyRef:
              key: admin-user-password
              name: RELEASE-NAME-influxdb
        - name: INFLUXDB_ADMIN_USER_TOKEN
          valueFrom:
            secretKeyRef:
              key: admin-user-token
              name: RELEASE-NAME-influxdb
        - name: INFLUXDB_ADMIN_BUCKET
          value: primary
        - name: INFLUXDB_ADMIN_ORG
          value: primary
        envFrom: null
        image: docker.io/bitnami/influxdb:2.1.1-debian-10-r50
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command:
            - bash
            - -c
            - |
              . /opt/bitnami/scripts/libinfluxdb.sh

              influxdb_env
              export INFLUX_USERNAME="$INFLUXDB_ADMIN_USER"
              export INFLUX_PASSWORD="$INFLUXDB_ADMIN_USER_PASSWORD"

              branch=$(influxdb_branch)

              if [[ "$branch" = "2" ]]; then
                  timeout 29s influx ping --host http://$POD_IP:8086
              else
                  timeout 29s influx -host $POD_IP -port 8086 -execute "SHOW DATABASES"
              fi
          failureThreshold: 6
          initialDelaySeconds: 180
          periodSeconds: 45
          successThreshold: 1
          timeoutSeconds: 30
        name: influxdb
        ports:
        - containerPort: 8086
          name: http
          protocol: TCP
        - containerPort: 8088
          name: rpc
          protocol: TCP
        readinessProbe:
          exec:
            command:
            - bash
            - -c
            - |
              . /opt/bitnami/scripts/libinfluxdb.sh

              influxdb_env
              export INFLUX_USERNAME="$INFLUXDB_ADMIN_USER"
              export INFLUX_PASSWORD="$INFLUXDB_ADMIN_USER_PASSWORD"

              branch=$(influxdb_branch)

              if [[ "$branch" = "2" ]]; then
                  timeout 29s influx ping --host http://$POD_IP:8086
              else
                  timeout 29s influx -host $POD_IP -port 8086 -execute "SHOW DATABASES"
              fi
          failureThreshold: 6
          initialDelaySeconds: 60
          periodSeconds: 45
          successThreshold: 1
          timeoutSeconds: 30
        resources:
          limits: {}
          requests: {}
        securityContext:
          runAsNonRoot: true
          runAsUser: 1001
        volumeMounts:
        - mountPath: /bitnami/influxdb
          name: data
      initContainers: null
      priorityClassName: ""
      securityContext:
        fsGroup: 1001
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: RELEASE-NAME-influxdb
