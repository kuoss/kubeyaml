apiVersion: v1
data: null
kind: Secret
metadata:
  labels:
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: pipelines
    app.kubernetes.io/version: 1.19.4
    helm.sh/chart: pipelines-101.19.4
  name: RELEASE-NAME-pipelines-system-yaml
stringData:
  system.yaml: "\nshared:\n  ## Artifactory configuration\n  ##\n  artifactory:\n
    \   ## Artifactory URL\n    ##\n    baseUrl: \"http://RELEASE-NAME-artifactory:8082\"\n
    \   ## Unified UI URL\n    ##\n    baseUrlUI: \"http://RELEASE-NAME-artifactory:8082\"\n
    \   ## Pipelines Service ID\n    ##\n    serviceId: \"jfpip@12345\"\n    ## Artifactory
    Service ID\n    ##\n    artifactoryServiceId: \"FFFFFFFFFFFF\"\n    ## Artifactory
    License ID\n    ##\n    licenseId: \"FFFFFFFFF\"\n    ## Proxy to connect to Artifactory\n
    \   ##\n    proxy:\n      url: \"\"\n      username: \"\"\n      password: \"\"\n\n
    \ ## JFConnect configuration\n  ##\n  jfconnect:\n    enabled: false\n\n  ## Routers
    configuration\n  ##\n  router:\n    ip: \"\"\n    accessPort: 8046\n    dataPort:
    8082\n    joinKey: EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE\n  security:\n    masterKey:
    bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n\n  ## Database
    configuration\n  ##\n  db:\n    type: \"postgres\"\n    maxOpenConnections: 5\n
    \   minOpenConnections: 0\n    idleTimeoutInSeconds: 10\n    ip: RELEASE-NAME-postgresql\n
    \   port: \"5432\"\n    name: pipelinesdb\n    username: apiuser\n    password:
    \"pipeline\"\n    externalUrl: \"\"\n    connectionString: \"postgres://apiuser:pipeline@RELEASE-NAME-postgresql:5432/pipelinesdb\"\n\n
    \ ## newRelic configuration\n  ##\n  newRelic:\n    enabled: false\n    license:
    \n    appName: \n    logging:\n      debug: false\n    distributedTracer:\n      enabled:
    false\n  ## RabbitMQ configuration\n  ##\n  msg:\n    ip: RELEASE-NAME-rabbitmq\n
    \   port: 5672\n    adminPort: 15672\n    erlangCookie: secretcookie\n    username:
    admin\n    password: \"password\"\n    defaultExchange: rootvhost\n    amqpVhost:
    pipelines\n    amqpRootVhost: pipelinesRoot\n    protocol: amqp\n    queues:\n
    \     - \"core.pipelineSync\"\n      - \"core.runTrigger\"\n      - \"core.stepTrigger\"\n
    \     - \"core.marshaller\"\n      - \"cluster.init\"\n      - \"core.logup\"\n
    \     - \"www.signals\"\n      - \"core.nexec\"\n      - \"core.hookHandler\"\n
    \     - \"core.extensionSync\"\n      - \"core.templateSync\"\n      - \"core.reqSealer\"\n
    \   ui:\n      protocol: http\n      username: admin\n      password: \"password\"\n
    \   external:\n      ## URL for build plane VMs to access RabbitMQ\n      url:
    amqp://RELEASE-NAME-rabbitmq:5672\n      rootUrl: \"\"\n      adminUrl: \"\"\n
    \   build:\n      username: \n      password: \"\"\n\n  ## Vault configuration\n
    \ ##\n  vault:\n    port: 8200\n    ip: RELEASE-NAME-vault\n    url: http://RELEASE-NAME-vault:8200\n
    \   ## DO NOT CHANGE THE TOKEN VALUE!!!\n    token: \"_VAULT_TOKEN_\"\n    unsealKeys:\n
    \     - \"\"\n      - \"\"\n      - \"\"\n      - \"\"\n      - \"\"\n\n  ## Redis
    configuration\n  ##\n  redis:\n    ip: RELEASE-NAME-redis-master\n    port: 6379\n\n
    \   clusterEnabled: false\n\n  ## Metrics logging\n  metrics:\n    enabled: false\n
    \ logging:\n\n    view:\n      enabled: false\n      refreshRate: 10s\n      concurrentSessionsPerUser:
    10\n\n    metrics:\n      filePath: /opt/jfrog/pipelines/var/log/api-metrics_events.log\n
    \     console: false\n      rotation:\n        maxSizeMb: 25\n        maxFiles:
    10\n        maxAgeDays: 365\n        compress: true\n        intervalMs: 900000\n\n##
    This section is used for bringing up the core services and setting up\n## configurations
    required by the installer & the services\n##\ncore:\n  ## id is automatically
    determined based on the current hostname\n  ## or set using the SHARED_NODE_ID
    environment variable.\n  ##\n  id: \"afd8df9d08bf257ae9b7d7dbbf348b7a3a574ebdd3a61d350d4b64e3129dee85\"\n
    \ installerIP: \"1.2.3.4\"\n  installerAuthToken: \"c7595edd-b63d-4fd6-9e1e-13924d6637f0\"\n
    \ installerImage: \"jfrog/pipelines-installer\"\n  registryUrl: \"releases-docker.jfrog.io\"\n
    \ imageRegistrySecret: \"\"\n  os: \"Ubuntu_16.04\"\n  osDistribution: \"xenial\"\n
    \ architecture: \"x86_64\"\n  dockerVersion: \"\"\n  runMode: \"production\"\n
    \ user: \"\"\n  group: \"\"\n  noVerifySsl: false\n  ignoreTLSErrors: false\n
    \ controlplaneVersion: 1.19.4\n  buildplaneVersion: 1.19.4\n  accessControlAllowOrigins:\n
    \   - update_with_artifactory_url\n    - \n  rabbitmqHealthCheckIntervalInMins:
    1\n  artifactoryHealthCheckIntervalInMins: 1\n  dbHealthCheckIntervalInMins: 1\n
    \ dbHealthCheckTimeoutInSeconds: 2\n  autoSyncResourceIfOutdated: false\n  ##
    Global proxy settings, to be applied to all services\n  ##\n  proxy:\n    httpProxy:
    \"\"\n    httpsProxy: \"\"\n    noProxy: \"\"\n    username: \"\"\n    password:
    \"\"\n\n  ## Mailserver settings\n  ##\n  mailserver:\n    host: \"\"\n    port:
    \"\"\n    username: \"\"\n    password: \"\"\n    tls: \"\"\n    ssl: \"\"\n  apiRetryIntervalMs:
    3000\n  accountSyncFrequencyHr: 1\n  hardDeleteIntervalInMins: 60\n  configBackupCount:
    5\n  lastUpdateTime: \"\"\n  callHomeUrl:  \"https://api.bintray.com/products/jfrog/pipelines/stats/usage\"\n
    \ allowCallHome: true\n  serviceInstanceHealthCheckIntervalInMins: 1\n  serviceInstanceStatsCutOffIntervalInHours:
    24\n  customCACertsPath: \"\"\n  signedPipelinesEnabled: true\n\n  retentionPolicy:\n
    \   enabled: false\n    maxAgeDays: 90\n    minRuns: 10\n\n  ## Service configuration\n
    \ ##\n  services:\n    api:\n      name: RELEASE-NAME-pipelines-api\n      port:
    30000\n      externalUrl: http://pipelines.test.com\n    www:\n      name: RELEASE-NAME-pipelines-www\n
    \     port: 30001\n      sessionSecret: \"c7595edd-b63d-4fd6-9e1e-13924d6637f0\"\n
    \   pipelineSync:\n      name: pipelineSync\n    runTrigger:\n      name: runTrigger\n
    \   stepTrigger:\n      name: stepTrigger\n    cron:\n      name: cron\n    nexec:\n
    \     name: nexec\n    hookHandler:\n      name: hookHandler\n    marshaller:\n
    \     name: marshaller\n    extensionSync:\n      name: extensionSync\n    templateSync:\n
    \     name: templateSync\n    reqSealer:\n      name: reqSealer\n\n## Runtime
    configuration\n##\nruntime:\n  rootBucket: \"jfrogpipelines\"\n  defaultMinionCount:
    1\n  nodeCacheIntervalMS: 600000\n  jobConsoleBatchSize: 10\n  jobConsoleBufferIntervalMs:
    3\n  maxDiskUsagePercentage: 90\n  stepTimeoutMS: 2.16e+07\n  nodeStopDayOfWeek:
    0\n  nodeStopIntervalDays: 30\n  maxNodeCheckInDelayMin: 15\n  nodePollerIntervalMS:
    15000\n  defaultMinionInstanceSize: \"c4.large\"\n  allowDynamicNodes: true\n
    \ allowCustomNodes: true\n  languageImages:\n    - architecture: x86_64\n      os:
    Ubuntu_16.04\n      language: node\n      registryUrl: releases-docker.jfrog.io\n
    \     image: jfrog/pipelines-u16node\n      isDefault: true\n      defaultVersion:
    12.18.2\n    - architecture: x86_64\n      os: Ubuntu_16.04\n      language: java\n
    \     registryUrl: releases-docker.jfrog.io\n      image: jfrog/pipelines-u16java\n
    \     defaultVersion: 14\n    - architecture: x86_64\n      os: Ubuntu_16.04\n
    \     language: cpp\n      registryUrl: releases-docker.jfrog.io\n      image:
    jfrog/pipelines-u16cpp\n      defaultVersion: 9.0.0\n    - architecture: x86_64\n
    \     os: Ubuntu_16.04\n      language: go\n      registryUrl: releases-docker.jfrog.io\n
    \     image: jfrog/pipelines-u16go\n      defaultVersion: 1.14.4\n    - architecture:
    x86_64\n      os: Ubuntu_18.04\n      language: node\n      registryUrl: releases-docker.jfrog.io\n
    \     image: jfrog/pipelines-u18node\n      defaultVersion: 14\n    - architecture:
    x86_64\n      os: Ubuntu_18.04\n      language: node\n      registryUrl: releases-docker.jfrog.io\n
    \     image: jfrog/pipelines-u18node\n      isDefault: true\n      defaultVersion:
    14\n    - architecture: x86_64\n      os: Ubuntu_18.04\n      language: go\n      registryUrl:
    releases-docker.jfrog.io\n      image: jfrog/pipelines-u18go\n      defaultVersion:
    1.16\n    - architecture: x86_64\n      os: Ubuntu_18.04\n      language: java\n
    \     registryUrl: releases-docker.jfrog.io\n      image: jfrog/pipelines-u18java\n
    \     defaultVersion: 11\n    - architecture: x86_64\n      os: Ubuntu_18.04\n
    \     language: cpp\n      registryUrl: releases-docker.jfrog.io\n      image:
    jfrog/pipelines-u18cpp\n      defaultVersion: 10\n    - architecture: x86_64\n
    \     os: Ubuntu_20.04\n      language: node\n      registryUrl: releases-docker.jfrog.io\n
    \     image: jfrog/pipelines-u20node\n      isDefault: true\n      defaultVersion:
    12\n    - architecture: x86_64\n      os: Ubuntu_20.04\n      language: java\n
    \     registryUrl: releases-docker.jfrog.io\n      image: jfrog/pipelines-u20java\n
    \     defaultVersion: 11\n    - architecture: x86_64\n      os: Ubuntu_20.04\n
    \     language: cpp\n      registryUrl: releases-docker.jfrog.io\n      image:
    jfrog/pipelines-u20cpp\n      defaultVersion: 10\n    - architecture: x86_64\n
    \     os: Ubuntu_20.04\n      language: go\n      registryUrl: releases-docker.jfrog.io\n
    \     image: jfrog/pipelines-u20go\n      defaultVersion: 1.16\n    - architecture:
    x86_64\n      os: CentOS_7\n      language: node\n      registryUrl: releases-docker.jfrog.io\n
    \     image: jfrog/pipelines-c7node\n      isDefault: true\n      defaultVersion:
    14\n    - architecture: x86_64\n      os: CentOS_7\n      language: java\n      registryUrl:
    releases-docker.jfrog.io\n      image: jfrog/pipelines-c7java\n      defaultVersion:
    11\n    - architecture: x86_64\n      os: CentOS_7\n      language: cpp\n      registryUrl:
    releases-docker.jfrog.io\n      image: jfrog/pipelines-c7cpp\n      defaultVersion:
    3\n    - architecture: x86_64\n      os: CentOS_7\n      language: go\n      registryUrl:
    releases-docker.jfrog.io\n      image: jfrog/pipelines-c7go\n      defaultVersion:
    1.16\n    - architecture: x86_64\n      os: CentOS_8\n      language: node\n      registryUrl:
    releases-docker.jfrog.io\n      image: jfrog/pipelines-c8node\n      isDefault:
    true\n      defaultVersion: 14\n    - architecture: x86_64\n      os: CentOS_8\n
    \     language: java\n      registryUrl: releases-docker.jfrog.io\n      image:
    jfrog/pipelines-c8java\n      defaultVersion: 11\n    - architecture: x86_64\n
    \     os: CentOS_8\n      language: cpp\n      registryUrl: releases-docker.jfrog.io\n
    \     image: jfrog/pipelines-c8cpp\n      defaultVersion: 9\n    - architecture:
    x86_64\n      os: CentOS_8\n      language: go\n      registryUrl: releases-docker.jfrog.io\n
    \     image: jfrog/pipelines-c8go\n      defaultVersion: 1.16\n    - architecture:
    x86_64\n      os: WindowsServer_2019\n      language: node\n      registryUrl:
    releases-docker.jfrog.io\n      image: jfrog/pipelines-w19node\n      defaultVersion:
    14\n    - architecture: x86_64\n      os: WindowsServer_2019\n      language:
    java\n      registryUrl: releases-docker.jfrog.io\n      image: jfrog/pipelines-w19java\n
    \     defaultVersion: 11\n    - architecture: x86_64\n      os: WindowsServer_2019\n
    \     language: cpp\n      registryUrl: releases-docker.jfrog.io\n      image:
    jfrog/pipelines-w19cpp\n      defaultVersion: 10\n    - architecture: x86_64\n
    \     os: WindowsServer_2019\n      language: go\n      registryUrl: releases-docker.jfrog.io\n
    \     image: jfrog/pipelines-w19go\n      defaultVersion: 1.16\n    - architecture:
    x86_64\n      os: WindowsServer_2019\n      language: dotnetcore\n      registryUrl:
    releases-docker.jfrog.io\n      image: jfrog/pipelines-w19dotnetcore\n      isDefault:
    true\n      defaultVersion: 3\n    - architecture: x86_64\n      os: RHEL_7\n
    \     language: node\n      registryUrl: releases-docker.jfrog.io\n      image:
    jfrog/pipelines-c7node\n      isDefault: true\n      defaultVersion: 14\n    -
    architecture: x86_64\n      os: RHEL_7\n      language: java\n      registryUrl:
    releases-docker.jfrog.io\n      image: jfrog/pipelines-c7java\n      defaultVersion:
    11\n    - architecture: x86_64\n      os: RHEL_7\n      language: cpp\n      registryUrl:
    releases-docker.jfrog.io\n      image: jfrog/pipelines-c7cpp\n      defaultVersion:
    3\n    - architecture: x86_64\n      os: RHEL_7\n      language: go\n      registryUrl:
    releases-docker.jfrog.io\n      image: jfrog/pipelines-c7go\n      defaultVersion:
    1.16\n    - architecture: x86_64\n      os: RHEL_8\n      language: node\n      registryUrl:
    releases-docker.jfrog.io\n      image: jfrog/pipelines-c8node\n      isDefault:
    true\n      defaultVersion: 14\n    - architecture: x86_64\n      os: RHEL_8\n
    \     language: java\n      registryUrl: releases-docker.jfrog.io\n      image:
    jfrog/pipelines-c8java\n      defaultVersion: 11\n    - architecture: x86_64\n
    \     os: RHEL_8\n      language: cpp\n      registryUrl: releases-docker.jfrog.io\n
    \     image: jfrog/pipelines-c8cpp\n      defaultVersion: 9\n    - architecture:
    x86_64\n      os: RHEL_8\n      language: go\n      registryUrl: releases-docker.jfrog.io\n
    \     image: jfrog/pipelines-c8go\n      defaultVersion: 1.16\n"
type: Opaque
