apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redis-cluster
    helm.sh/chart: redis-cluster-7.2.1
  name: RELEASE-NAME-redis-cluster
  namespace: default
spec:
  podManagementPolicy: Parallel
  replicas: 6
  selector:
    matchLabels:
      app.kubernetes.io/instance: RELEASE-NAME
      app.kubernetes.io/name: redis-cluster
  serviceName: RELEASE-NAME-redis-cluster-headless
  template:
    metadata:
      annotations:
        checksum/config: 25e9297eb47cd4f15837a334a26a00ac2a6c36d6bdd2ed88c5e030a754d5e5f2
        checksum/scripts: 324b5e6e287725defb71de63b7dbef5050e69262111a79f852ed603bbd2f13ac
        checksum/secret: 2d7f501ea803413dacb41a0d05c185ca0f0bc8d10bf6a231a93951a41ae4d0cc
      labels:
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: redis-cluster
        helm.sh/chart: redis-cluster-7.2.1
    spec:
      affinity:
        nodeAffinity: null
        podAffinity: null
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/instance: RELEASE-NAME
                  app.kubernetes.io/name: redis-cluster
              namespaces:
              - default
              topologyKey: kubernetes.io/hostname
            weight: 1
      containers:
      - args:
        - |
          # Backwards compatibility change
          if ! [[ -f /opt/bitnami/redis/etc/redis.conf ]]; then
              echo COPYING FILE
              cp  /opt/bitnami/redis/etc/redis-default.conf /opt/bitnami/redis/etc/redis.conf
          fi
          pod_index=($(echo "$POD_NAME" | tr "-" "\n"))
          pod_index="${pod_index[-1]}"
          if [[ "$pod_index" == "0" ]]; then
            export REDIS_CLUSTER_CREATOR="yes"
            export REDIS_CLUSTER_REPLICAS="1"
          fi
          /opt/bitnami/scripts/redis-cluster/entrypoint.sh /opt/bitnami/scripts/redis-cluster/run.sh
        command:
        - /bin/bash
        - -c
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: REDIS_NODES
          value: 'RELEASE-NAME-redis-cluster-0.RELEASE-NAME-redis-cluster-headless
            RELEASE-NAME-redis-cluster-1.RELEASE-NAME-redis-cluster-headless RELEASE-NAME-redis-cluster-2.RELEASE-NAME-redis-cluster-headless
            RELEASE-NAME-redis-cluster-3.RELEASE-NAME-redis-cluster-headless RELEASE-NAME-redis-cluster-4.RELEASE-NAME-redis-cluster-headless
            RELEASE-NAME-redis-cluster-5.RELEASE-NAME-redis-cluster-headless '
        - name: REDISCLI_AUTH
          valueFrom:
            secretKeyRef:
              key: redis-password
              name: RELEASE-NAME-redis-cluster
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              key: redis-password
              name: RELEASE-NAME-redis-cluster
        - name: REDIS_AOF_ENABLED
          value: "yes"
        - name: REDIS_TLS_ENABLED
          value: "no"
        - name: REDIS_PORT
          value: "6379"
        image: docker.io/bitnami/redis-cluster:6.2.6-debian-10-r95
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - /scripts/ping_liveness_local.sh 5
          failureThreshold: 5
          initialDelaySeconds: 5
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 6
        name: RELEASE-NAME-redis-cluster
        ports:
        - containerPort: 6379
          name: tcp-redis
        - containerPort: 16379
          name: tcp-redis-bus
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - /scripts/ping_readiness_local.sh 1
          failureThreshold: 5
          initialDelaySeconds: 5
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 2
        resources:
          limits: {}
          requests: {}
        securityContext:
          runAsNonRoot: true
          runAsUser: 1001
        volumeMounts:
        - mountPath: /scripts
          name: scripts
        - mountPath: /bitnami/redis/data
          name: redis-data
          subPath: null
        - mountPath: /opt/bitnami/redis/etc/redis-default.conf
          name: default-config
          subPath: redis-default.conf
        - mountPath: /opt/bitnami/redis/etc/
          name: redis-tmp-conf
      enableServiceLinks: false
      securityContext:
        fsGroup: 1001
        runAsUser: 1001
        sysctls: []
      serviceAccountName: default
      volumes:
      - configMap:
          defaultMode: 493
          name: RELEASE-NAME-redis-cluster-scripts
        name: scripts
      - configMap:
          name: RELEASE-NAME-redis-cluster-default
        name: default-config
      - emptyDir: {}
        name: redis-tmp-conf
  updateStrategy:
    rollingUpdate:
      partition: 0
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      labels:
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/name: redis-cluster
      name: redis-data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 8Gi
