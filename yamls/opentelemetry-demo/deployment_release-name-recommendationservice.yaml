apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: recommendationservice
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: release-name-recommendationservice
    app.kubernetes.io/part-of: opentelemetry-demo
    app.kubernetes.io/version: 1.11.1
    helm.sh/chart: opentelemetry-demo-0.32.8
    opentelemetry.io/name: release-name-recommendationservice
  name: release-name-recommendationservice
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      opentelemetry.io/name: release-name-recommendationservice
  template:
    metadata:
      labels:
        app.kubernetes.io/component: recommendationservice
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/name: release-name-recommendationservice
        opentelemetry.io/name: release-name-recommendationservice
    spec:
      containers:
      - env:
        - name: OTEL_SERVICE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.labels['app.kubernetes.io/component']
        - name: OTEL_COLLECTOR_NAME
          value: release-name-otelcol
        - name: OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
          value: cumulative
        - name: RECOMMENDATION_SERVICE_PORT
          value: "8080"
        - name: PRODUCT_CATALOG_SERVICE_ADDR
          value: release-name-productcatalogservice:8080
        - name: OTEL_PYTHON_LOG_CORRELATION
          value: "true"
        - name: PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION
          value: python
        - name: FLAGD_HOST
          value: release-name-flagd
        - name: FLAGD_PORT
          value: "8013"
        - name: OTEL_EXPORTER_OTLP_ENDPOINT
          value: http://$(OTEL_COLLECTOR_NAME):4317
        - name: OTEL_RESOURCE_ATTRIBUTES
          value: service.name=$(OTEL_SERVICE_NAME),service.namespace=opentelemetry-demo,service.version=1.11.1
        image: ghcr.io/open-telemetry/demo:1.11.1-recommendationservice
        imagePullPolicy: IfNotPresent
        name: recommendationservice
        ports:
        - containerPort: 8080
          name: service
        resources:
          limits:
            memory: 500Mi
        volumeMounts: null
      serviceAccountName: release-name
      volumes: null
