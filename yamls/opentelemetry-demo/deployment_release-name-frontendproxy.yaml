apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: frontendproxy
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: release-name-frontendproxy
    app.kubernetes.io/part-of: opentelemetry-demo
    app.kubernetes.io/version: 1.11.1
    helm.sh/chart: opentelemetry-demo-0.32.8
    opentelemetry.io/name: release-name-frontendproxy
  name: release-name-frontendproxy
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      opentelemetry.io/name: release-name-frontendproxy
  template:
    metadata:
      labels:
        app.kubernetes.io/component: frontendproxy
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/name: release-name-frontendproxy
        opentelemetry.io/name: release-name-frontendproxy
    spec:
      containers:
      - env:
        - name: OTEL_SERVICE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.labels['app.kubernetes.io/component']
        - name: OTEL_COLLECTOR_NAME
          value: release-name-otelcol
        - name: OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
          value: cumulative
        - name: ENVOY_PORT
          value: "8080"
        - name: FLAGD_HOST
          value: release-name-flagd
        - name: FLAGD_PORT
          value: "8013"
        - name: FRONTEND_HOST
          value: release-name-frontend
        - name: FRONTEND_PORT
          value: "8080"
        - name: GRAFANA_SERVICE_HOST
          value: release-name-grafana
        - name: GRAFANA_SERVICE_PORT
          value: "80"
        - name: IMAGE_PROVIDER_HOST
          value: release-name-imageprovider
        - name: IMAGE_PROVIDER_PORT
          value: "8081"
        - name: JAEGER_SERVICE_HOST
          value: release-name-jaeger-query
        - name: JAEGER_SERVICE_PORT
          value: "16686"
        - name: LOCUST_WEB_HOST
          value: release-name-loadgenerator
        - name: LOCUST_WEB_PORT
          value: "8089"
        - name: OTEL_COLLECTOR_HOST
          value: $(OTEL_COLLECTOR_NAME)
        - name: OTEL_COLLECTOR_PORT_GRPC
          value: "4317"
        - name: OTEL_COLLECTOR_PORT_HTTP
          value: "4318"
        - name: OTEL_RESOURCE_ATTRIBUTES
          value: service.name=$(OTEL_SERVICE_NAME),service.namespace=opentelemetry-demo,service.version=1.11.1
        image: ghcr.io/open-telemetry/demo:1.11.1-frontendproxy
        imagePullPolicy: IfNotPresent
        name: frontendproxy
        ports:
        - containerPort: 8080
          name: service
        resources:
          limits:
            memory: 50Mi
        securityContext:
          runAsGroup: 101
          runAsNonRoot: true
          runAsUser: 101
        volumeMounts: null
      serviceAccountName: release-name
      volumes: null
