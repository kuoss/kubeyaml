apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: master
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: pytorch
    helm.sh/chart: pytorch-2.3.24
  name: RELEASE-NAME-pytorch
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: master
      app.kubernetes.io/instance: RELEASE-NAME
      app.kubernetes.io/name: pytorch
  template:
    metadata:
      labels:
        app.kubernetes.io/component: master
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: pytorch
        helm.sh/chart: pytorch-2.3.24
    spec:
      affinity:
        nodeAffinity: null
        podAffinity: null
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/component: master
                  app.kubernetes.io/instance: RELEASE-NAME
                  app.kubernetes.io/name: pytorch
              namespaces:
              - default
              topologyKey: kubernetes.io/hostname
            weight: 1
      containers:
      - command:
        - bash
        - -c
        - |
          sleep infinity
        env: null
        image: docker.io/bitnami/pytorch:1.10.1-debian-10-r0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command:
            - python
            - -c
            - import torch; torch.__version__
          failureThreshold: 5
          initialDelaySeconds: 5
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 5
        name: master
        ports:
        - containerPort: 49875
          name: pytorch
        readinessProbe:
          exec:
            command:
            - python
            - -c
            - import torch; torch.__version__
          failureThreshold: 5
          initialDelaySeconds: 5
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits: {}
          requests: {}
        volumeMounts:
        - mountPath: /bitnami/pytorch
          name: data
      securityContext:
        fsGroup: 1001
        runAsUser: 1001
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: RELEASE-NAME-pytorch
